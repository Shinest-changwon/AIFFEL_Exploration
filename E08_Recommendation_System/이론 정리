0. 추천시스템의 개념과 목적을 이해한다.
1. Implicit 라이브러리를 활용하여 Matrix Factorization(이하 MF) 기반의 추천 모델을 만들어 본다.
2. 음악 감상 기록을 활용하여 비슷한 아티스트를 찾고 아티스트를 추천해 본다.
3. 추천 시스템에서 자주 사용되는 데이터 구조인 CSR Matrix을 익힌다
4. 유저의 행위 데이터 중 Explicit data와 Implicit data의 차이점을 익힌다.
5. 새로운 데이터셋으로 직접 추천 모델을 만들어 본다.

8-3
1) 데이터 프레임 열을 삭제하는 방법
 - 사용하는 열만 재할당
 - 열을 삭제

2) condition = (data['user_id']== data.loc[0, 'user_id'])
data.loc[condition] # 첫 번째 유저가 어떤 아티스트의 노래를 듣는지 확인

3) artist_count = data.groupby('artist')['user_id'].count()
artist_count.sort_values(ascending=False).head(30) # 인기 많은 아티스트

4) 동일한 기능 (groupby)
# 유저별 몇 명의 아티스트를 듣고 있는지에 대한 통계
user_count = data.groupby('user_id')['artist'].count()
print(user_count.describe())
print('----------------------------------------')
artist_count = data['artist'].groupby(data['user_id']).count()
print(artist_count.describe())

5) if not data.isin({'user_id':['zimin']})['user_id'].any():  # user_id에 'zimin'이라는 데이터가 없다면
    data = data.append(my_playlist)                           # 위에 임의로 만든 my_favorite 데이터를 추가해 줍니다. 


8-4
1) print(f'Ratio of only_one over all data is {one/all_data:.2%}')  # f-format에 대한 설명은 https://bit.ly/2DTLqYU


